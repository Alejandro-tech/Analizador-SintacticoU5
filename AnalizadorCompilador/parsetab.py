
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIFELSEleftPARENTIZQPARENTDERrightPTCOMAleftSUMAMENOSleftMULTIPLICARDIVISIONrightNUMBERrightIGUALQUErightIDABSTRACT AS BREAK BYTE CASE CATCH CHAR CIN CLASS COMA COMENTARIO COMILLA COMMENT CONST CONTINUE CORCHETEDER CORCHETEIZQ COUT DEFAULT DELEGATE DIPLED DIPLEI DIVISION DO DOPUNTOS DOUBLE ELSE END EVENT EXPLICIT EXTERN FALSE FINALLY FIXED FLOAT FOR FOREACH GOTO ID IF IGNORE IGUALIGUAL IGUALQUE IMPLICIT IN INT INTERFACE INTERNAL IS LOCK LONG MAIN MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS MODULO MULTIPLICAR NAMESPACE NEW NULL NUMBER OBJECT OPERATOR OUT PARENTDER PARENTIZQ PRIVATE PROTECTED PTCOMA PUBLIC PUNTO REF RETURN STATIC STRING STRUCT SUMA SWITCH THIS THROW TRUE TRY TYPEOF UINT ULONG UNCHECKED UNSAFE USHORT USING VIRTUAL VOID VOLATILE WHILEdeclaracion : IFdeclaracion : IGUALQUEdeclaracion : ELSEexpresion :  PTCOMAdeclaracion : expresion\n    expresion  :   expresion SUMA expresion\n                |   expresion MENOS expresion\n                |   expresion MULTIPLICAR expresion\n                |   expresion DIVISION expresion\n    \n    expresion  : PARENTIZQ expresion PARENTDER\n                | CORCHETEIZQ expresion CORCHETEDER\n    \n    expresion   :  expresion MENORQUE expresion \n                |  expresion MAYORQUE expresion \n                |  expresion MENORIGUALQUE expresion \n                |   expresion MAYORIGUALQUE expresion \n                |   expresion IGUALQUE expresion \n                |   PARENTIZQ expresion MENORQUE expresion PARENTDER\n                |   IF PARENTIZQ expresion MAYORQUE expresion PARENTDER\n                |   PARENTIZQ expresion MENORIGUALQUE expresion PARENTDER\n                |   PARENTIZQ expresion MAYORIGUALQUE expresion PARENTDER\n                |   PARENTIZQ expresion IGUALQUE expresion PARENTDER\n\n    expresion : NUMBERexpresion : INT ID IGUALQUE NUMBER PTCOMAexpresion : INT ID PTCOMAexpresion : INT ID IGUALQUE ID MULTIPLICAR ID PTCOMAexpresion : INT ID IGUALQUE ID PTCOMAexpresion : IDexpresion : END'
    
_lr_action_items = {'IF':([0,7,8,13,14,15,16,17,18,19,20,21,22,38,39,40,41,45,],[2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'IGUALQUE':([0,5,6,9,11,12,23,25,26,27,28,29,30,31,32,33,34,35,36,37,42,44,46,47,48,49,52,53,54,55,56,58,59,60,62,],[3,22,-4,-22,-27,-28,41,22,43,22,22,22,22,22,22,22,22,22,22,-10,-11,-24,22,22,22,22,22,-17,-19,-20,-21,-26,-23,-18,-25,]),'ELSE':([0,],[4,]),'PTCOMA':([0,7,8,13,14,15,16,17,18,19,20,21,22,26,38,39,40,41,45,50,51,61,],[6,6,6,6,6,6,6,6,6,6,6,6,6,44,6,6,6,6,6,58,59,62,]),'PARENTIZQ':([0,2,7,8,13,14,15,16,17,18,19,20,21,22,24,38,39,40,41,45,],[7,13,7,7,7,7,7,7,7,7,7,7,7,7,13,7,7,7,7,7,]),'CORCHETEIZQ':([0,7,8,13,14,15,16,17,18,19,20,21,22,38,39,40,41,45,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'NUMBER':([0,7,8,13,14,15,16,17,18,19,20,21,22,38,39,40,41,43,45,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,51,9,]),'INT':([0,7,8,13,14,15,16,17,18,19,20,21,22,38,39,40,41,45,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'ID':([0,7,8,10,13,14,15,16,17,18,19,20,21,22,38,39,40,41,43,45,57,],[11,11,11,26,11,11,11,11,11,11,11,11,11,11,11,11,11,11,50,11,61,]),'END':([0,7,8,13,14,15,16,17,18,19,20,21,22,38,39,40,41,45,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'$end':([1,2,3,4,5,6,9,11,12,28,29,30,31,32,33,34,35,36,37,42,44,53,54,55,56,58,59,60,62,],[0,-1,-2,-3,-5,-4,-22,-27,-28,-6,-7,-8,-9,-12,-13,-14,-15,-16,-10,-11,-24,-17,-19,-20,-21,-26,-23,-18,-25,]),'SUMA':([5,6,9,11,12,23,25,27,28,29,30,31,32,33,34,35,36,37,42,44,46,47,48,49,52,53,54,55,56,58,59,60,62,],[14,-4,-22,-27,-28,14,14,14,-6,-7,-8,-9,14,14,14,14,-16,-10,-11,-24,14,14,14,-16,14,-17,-19,-20,-21,-26,-23,-18,-25,]),'MENOS':([5,6,9,11,12,23,25,27,28,29,30,31,32,33,34,35,36,37,42,44,46,47,48,49,52,53,54,55,56,58,59,60,62,],[15,-4,-22,-27,-28,15,15,15,-6,-7,-8,-9,15,15,15,15,-16,-10,-11,-24,15,15,15,-16,15,-17,-19,-20,-21,-26,-23,-18,-25,]),'MULTIPLICAR':([5,6,9,11,12,23,25,27,28,29,30,31,32,33,34,35,36,37,42,44,46,47,48,49,50,52,53,54,55,56,58,59,60,62,],[16,-4,-22,-27,-28,16,16,16,16,16,-8,-9,16,16,16,16,-16,-10,-11,-24,16,16,16,-16,57,16,-17,-19,-20,-21,-26,-23,-18,-25,]),'DIVISION':([5,6,9,11,12,23,25,27,28,29,30,31,32,33,34,35,36,37,42,44,46,47,48,49,52,53,54,55,56,58,59,60,62,],[17,-4,-22,-27,-28,17,17,17,17,17,-8,-9,17,17,17,17,-16,-10,-11,-24,17,17,17,-16,17,-17,-19,-20,-21,-26,-23,-18,-25,]),'MENORQUE':([5,6,9,11,12,23,25,27,28,29,30,31,32,33,34,35,36,37,42,44,46,47,48,49,52,53,54,55,56,58,59,60,62,],[18,-4,-22,-27,-28,38,18,18,-6,-7,-8,-9,18,18,18,18,-16,-10,-11,-24,18,18,18,-16,18,-17,-19,-20,-21,-26,-23,-18,-25,]),'MAYORQUE':([5,6,9,11,12,23,25,27,28,29,30,31,32,33,34,35,36,37,42,44,46,47,48,49,52,53,54,55,56,58,59,60,62,],[19,-4,-22,-27,-28,19,19,45,-6,-7,-8,-9,19,19,19,19,-16,-10,-11,-24,19,19,19,-16,19,-17,-19,-20,-21,-26,-23,-18,-25,]),'MENORIGUALQUE':([5,6,9,11,12,23,25,27,28,29,30,31,32,33,34,35,36,37,42,44,46,47,48,49,52,53,54,55,56,58,59,60,62,],[20,-4,-22,-27,-28,39,20,20,-6,-7,-8,-9,20,20,20,20,-16,-10,-11,-24,20,20,20,-16,20,-17,-19,-20,-21,-26,-23,-18,-25,]),'MAYORIGUALQUE':([5,6,9,11,12,23,25,27,28,29,30,31,32,33,34,35,36,37,42,44,46,47,48,49,52,53,54,55,56,58,59,60,62,],[21,-4,-22,-27,-28,40,21,21,-6,-7,-8,-9,21,21,21,21,-16,-10,-11,-24,21,21,21,-16,21,-17,-19,-20,-21,-26,-23,-18,-25,]),'PARENTDER':([6,9,11,12,23,28,29,30,31,32,33,34,35,36,37,42,44,46,47,48,49,52,53,54,55,56,58,59,60,62,],[-4,-22,-27,-28,37,-6,-7,-8,-9,-12,-13,-14,-15,-16,-10,-11,-24,53,54,55,-16,60,-17,-19,-20,-21,-26,-23,-18,-25,]),'CORCHETEDER':([6,9,11,12,25,28,29,30,31,32,33,34,35,36,37,42,44,53,54,55,56,58,59,60,62,],[-4,-22,-27,-28,42,-6,-7,-8,-9,-12,-13,-14,-15,-16,-10,-11,-24,-17,-19,-20,-21,-26,-23,-18,-25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaracion':([0,],[1,]),'expresion':([0,7,8,13,14,15,16,17,18,19,20,21,22,38,39,40,41,45,],[5,23,25,27,28,29,30,31,32,33,34,35,36,46,47,48,49,52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaracion","S'",1,None,None,None),
  ('declaracion -> IF','declaracion',1,'p_declaracion_coditionif','AnalizadorSintactico.py',23),
  ('declaracion -> IGUALQUE','declaracion',1,'p_declaracion_EQUALS','AnalizadorSintactico.py',27),
  ('declaracion -> ELSE','declaracion',1,'p_declaracion_coditionelse','AnalizadorSintactico.py',31),
  ('expresion -> PTCOMA','expresion',1,'p_declaracion_comma','AnalizadorSintactico.py',35),
  ('declaracion -> expresion','declaracion',1,'p_declaracion_expr','AnalizadorSintactico.py',39),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_operaciones','AnalizadorSintactico.py',45),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_operaciones','AnalizadorSintactico.py',46),
  ('expresion -> expresion MULTIPLICAR expresion','expresion',3,'p_expresion_operaciones','AnalizadorSintactico.py',47),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_operaciones','AnalizadorSintactico.py',48),
  ('expresion -> PARENTIZQ expresion PARENTDER','expresion',3,'p_expresion_grupo','AnalizadorSintactico.py',61),
  ('expresion -> CORCHETEIZQ expresion CORCHETEDER','expresion',3,'p_expresion_grupo','AnalizadorSintactico.py',62),
  ('expresion -> expresion MENORQUE expresion','expresion',3,'p_expresion_logicas','AnalizadorSintactico.py',68),
  ('expresion -> expresion MAYORQUE expresion','expresion',3,'p_expresion_logicas','AnalizadorSintactico.py',69),
  ('expresion -> expresion MENORIGUALQUE expresion','expresion',3,'p_expresion_logicas','AnalizadorSintactico.py',70),
  ('expresion -> expresion MAYORIGUALQUE expresion','expresion',3,'p_expresion_logicas','AnalizadorSintactico.py',71),
  ('expresion -> expresion IGUALQUE expresion','expresion',3,'p_expresion_logicas','AnalizadorSintactico.py',72),
  ('expresion -> PARENTIZQ expresion MENORQUE expresion PARENTDER','expresion',5,'p_expresion_logicas','AnalizadorSintactico.py',73),
  ('expresion -> IF PARENTIZQ expresion MAYORQUE expresion PARENTDER','expresion',6,'p_expresion_logicas','AnalizadorSintactico.py',74),
  ('expresion -> PARENTIZQ expresion MENORIGUALQUE expresion PARENTDER','expresion',5,'p_expresion_logicas','AnalizadorSintactico.py',75),
  ('expresion -> PARENTIZQ expresion MAYORIGUALQUE expresion PARENTDER','expresion',5,'p_expresion_logicas','AnalizadorSintactico.py',76),
  ('expresion -> PARENTIZQ expresion IGUALQUE expresion PARENTDER','expresion',5,'p_expresion_logicas','AnalizadorSintactico.py',77),
  ('expresion -> NUMBER','expresion',1,'p_expresion_numero','AnalizadorSintactico.py',102),
  ('expresion -> INT ID IGUALQUE NUMBER PTCOMA','expresion',5,'p_expresion_int','AnalizadorSintactico.py',106),
  ('expresion -> INT ID PTCOMA','expresion',3,'p_expresion_intd','AnalizadorSintactico.py',110),
  ('expresion -> INT ID IGUALQUE ID MULTIPLICAR ID PTCOMA','expresion',7,'p_expresion_intt','AnalizadorSintactico.py',114),
  ('expresion -> INT ID IGUALQUE ID PTCOMA','expresion',5,'p_expresion_intc','AnalizadorSintactico.py',118),
  ('expresion -> ID','expresion',1,'p_expresion_id','AnalizadorSintactico.py',122),
  ('expresion -> END','expresion',1,'p_expresion_end','AnalizadorSintactico.py',126),
]
